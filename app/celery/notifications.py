from datetime import datetime, timedelta
from sqlalchemy.future import select

from app.celery import celery
from app.database.database import async_session
from app.database.models import Subscription, User
from app.core.bot_instance import bot
from app.keyboards.user import get_pay_kb


@celery.task
async def notify_users_about_subscription():
    """–û–ø–æ–≤–µ—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ 3 –¥–Ω—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏."""
    async with async_session() as session:
        threshold_date = datetime.utcnow() + timedelta(days=3)

        result = await session.execute(
            select(User.tg_id)
            .join(Subscription)
            .where(Subscription.expires_at <= threshold_date, Subscription.status == True)
        )

        users = result.scalars().all()

        for tg_id in users:
            await bot.send_message(
                tg_id,
                "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 3 –¥–Ω—è!\n\n"
                "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û–ø–ª–∞—Ç–∏—Ç—å¬ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üëáüèª",
                reply_markup=get_pay_kb
            )
