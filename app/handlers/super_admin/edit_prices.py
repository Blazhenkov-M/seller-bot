from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from app.filters.admin_protect import AdminProtect
from app.keyboards.super_admin import prices_kb

from app.database.database import async_session
from app.services.edit_prices import get_prices, update_price
from app.states import EditPriceState

s_admin_edit_prices = Router()


@s_admin_edit_prices.callback_query(AdminProtect(), F.data == "edit_prices")
async def edit_prices(callback: CallbackQuery):
    async with async_session() as session:
        prices = await get_prices(session)
        text = (
            f"üí∞ –¢–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã:\n"
            f"üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ (–º–µ—Å—è—Ü): {prices.subscription} —Ä—É–±.\n"
            f"üë®‚Äç‚öïÔ∏è –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: {prices.consultation} —Ä—É–±.\n"
            f"\n–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫—É—é —Ü–µ–Ω—É –∏–∑–º–µ–Ω–∏—Ç—å:"
        )

    await callback.message.answer(text, reply_markup=prices_kb)
    await callback.answer()


@s_admin_edit_prices.callback_query(AdminProtect(), F.data == "subscribe_month_price")
async def change_subscription_price(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É (–º–µ—Å—è—Ü):")
    await state.set_state(EditPriceState.subscription)
    await callback.answer()


@s_admin_edit_prices.callback_query(AdminProtect(), F.data == "consultation_price")
async def change_consultation_price(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:")
    await state.set_state(EditPriceState.consultation)
    await callback.answer()


@s_admin_edit_prices.message(EditPriceState.subscription)
async def save_subscription_price(message: Message, state: FSMContext):
    try:
        new_price = int(message.text)
        async with async_session() as session:
            await update_price(session, "subscription", new_price)
        await message.answer(f"‚úÖ –¶–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {new_price} —Ä—É–±.")
    except ValueError:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
    finally:
        await state.clear()


@s_admin_edit_prices.message(EditPriceState.consultation)
async def save_consultation_price(message: Message, state: FSMContext):
    try:
        new_price = int(message.text)
        async with async_session() as session:
            await update_price(session, "consultation", new_price)
        await message.answer(f"‚úÖ –¶–µ–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {new_price} —Ä—É–±.")
    except ValueError:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
    finally:
        await state.clear()
