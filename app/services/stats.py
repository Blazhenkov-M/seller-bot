from sqlalchemy.future import select
from sqlalchemy import func
from sqlalchemy.ext.asyncio import AsyncSession
from app.database.models import User, Admin, Subscription, Order


async def get_all_usernames(session: AsyncSession) -> list[str]:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∏–∫–Ω–µ–π–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏—Å–∫–ª—é—á–∞—è –∞–¥–º–∏–Ω–æ–≤."""

    # –ü–æ–ª—É—á–∞–µ–º user_id –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤
    admin_user_ids = await session.scalars(select(Admin.user_id))
    admin_user_ids = set(admin_user_ids)  # –î–µ–ª–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤
    users = await session.scalars(select(User.username).where(User.tg_id.not_in(admin_user_ids)))
    usernames = [f"@{username}" for username in users if username]  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–∏–∫–Ω–µ–π–º—ã
    return usernames


async def calculate_conversion(session: AsyncSession) -> str:
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–∞–∂–∞–≤—à–∏—Ö /start
    total_users = (await session.execute(select(func.count()).select_from(User))).scalar_one()

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö –ø–æ–¥–ø–∏—Å–∫—É
    paid_users = (await session.execute(select(func.count()).select_from(Subscription).where(Subscription.status == True))).scalar_one()

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    total_reports = (await session.execute(select(func.count()).select_from(Order))).scalar_one()

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    processed_reports = (await session.execute(select(func.count()).select_from(Order).where(Order.processed == True))).scalar_one()

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã (–∏–∑–±–µ–≥–∞–µ–º –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 0)
    paid_conversion = round((paid_users / total_users * 100) if total_users else 0, 2)
    report_conversion = round((total_reports / total_users * 100) if total_users else 0, 2)
    processed_conversion = round((processed_reports / total_users * 100) if total_users else 0, 2)

    return (
        f"üìä **–ö–æ–Ω–≤–µ—Ä—Å–∏—è:**\n\n"
        f"üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"üí≥ –û–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É: {paid_users} ({paid_conversion}%)\n"
        f"üì§ –û—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç—á–µ—Ç: {total_reports} ({report_conversion}%)\n"
        f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã: {processed_reports} ({processed_conversion}%)"
    )
